"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dot = exports.getStyle = void 0;
const react_native_1 = require("react-native");
const react_1 = __importStar(require("react"));
const initialStyle = {
    borderRadius: 25,
    width: 6,
    height: 6,
    backgroundColor: '#f0f0f0',
    marginHorizontal: 2,
};
function getStyle({ index, currentIndex, lastIndex }) {
    if (react_native_1.Platform.OS === 'android') {
        return Object.assign(Object.assign({}, initialStyle), { backgroundColor: index === currentIndex ? '#ffffff' : 'transparent', borderWidth: index === currentIndex ? 0 : 0.7, borderColor: index === currentIndex ? 'transparent' : '#ffffff', marginHorizontal: 2 });
    }
    else {
        return Object.assign(Object.assign({}, initialStyle), { backgroundColor: index === currentIndex
                ? index === 0 || index === lastIndex
                    ? '#ffffff'
                    : '#000000'
                : '#f0f0f0', opacity: index === currentIndex ? 1 : 0.5, width: 8, height: 8, marginHorizontal: 5 });
    }
}
exports.getStyle = getStyle;
function Dot({ index, currentIndex, lastIndex }) {
    const [style, setStyle] = (0, react_1.useState)(getStyle({ index, currentIndex, lastIndex }));
    (0, react_1.useEffect)(() => {
        setStyle(getStyle({ index, currentIndex, lastIndex }));
    }, [index, currentIndex]);
    return react_1.default.createElement(react_native_1.View, { style: style });
}
exports.Dot = Dot;
